;*********************************************************************************
;
;
;	K17 말내에서 사용하는 함수군
;
;
;	□목차	^[ \t]*(@)로 아우트라인 엄선
;
;----------FUNCTION(S)-------------
;K17_GRT						현재의 관계 랭크를 돌려준다
;K17_RT_FG						관계 사정의 비트 플래그를 세운다
;K17_GRT_EX						GRT의 값에 요동을 준다
;K17_CHECK_ANGER_COM			분노의 상승 판정
;K17_MARK_반발각인 반발각인 붙인다
;K17_HEART						이 말로 사용하는 하트 마크를 돌려준다
;K17_HEART2						하트 마크를 돌려주는 서브 작은 (분)편
;K17_BLUSH						\/\/\/를 돌려준다
;K17_ROUND						round같은 녀석
;K17_PERCENT					100%중에 대한 값을 입금시켜 맞을까 추첨
;K17_LOWER_LIMIT_RAND			하한치 설정 랜덤
;K17_MAX_LIMIT_RAND				상한치 설정 랜덤
;K17_RANGE_RAND					치에 진폭을 갖게한 랜덤 값
;K17_SELECT_RAND				조건부 RAND
;---------빌렸습니다―-----------
;K17_RS							RAND_SPLIT 캐릭터라인의 랜덤 선택
;K17_CHANGE_SPLIT				번호치의 캐릭터라인을 조작
;K17_AUTO_SPLIT_NUM				캐릭터라인을 검색해 번호를 돌려준다
;K17_CHOICE						문자를[]선택지에 본체에 있는 함수의 커스터마이즈
;K17_ASK_M						문자 자체를 선택지에 전술
;-------------------------------------
;K17_GET_CHARA_POSNUM			그 캐릭터가 있는 위치에 몇 사람(MASTER 제외하다) 있을까 센다
;K17_CHECK_RANDOM_EVENT			에로계의 랜덤 이벤트 발생을 주인의 욕구불만도으로 판정해 준다
;K17_LUCKY_SUKEBE				지정한 확률로 발생 판정을 하는+둘이서라든지가 외관
;K17_CHECK_수송팬티 지정 캐릭터의 팬티를 몇매 수송중이나 검색한다
;K17_GET_CLOTHNAME_TOP			복장의 외형의 이름을 얻는다
;K17_GET_CLOTHNAME_TOP_UNDER
;K17_GET_CLOTHNAME_BOTTOM
;K17_GET_CLOTHNAME_BOTTOM_UNDER
;K17_GET_SKIRT					하반신걷어올리기에 대한 물체의 명칭 치마나 옷자락인가
;K17_CNAME						캐릭터의 부르는 법 기본 이것으로 MASTER를 부른다
;K17_GET_FRIENDS				앨리스의 친구인가 어떤가 판정하는 반응시키고 싶은 캐릭터 ID를 열거해 둔다
;K17_GET_FRIENDS_TARGET			지정한 캐릭터의 위치에 앨리스의 친구 ID를 취득
;K17_GET_FRIENDS_ROOM			지정한 캐릭터의 위치가 앨리스의 친구의 초기위치인지를 조사한다
;K17_GET_TARGETS_ID				복수 있을까 수사 내친 김에 친구 우선으로 ID를 취한다
;K17_GET_DOLL					캐릭터에 샹하이와 봉래가 포함하지 않으면 사용할 수 있다고 하는 판정을 한다
;K17_GET_DOLL_CNAME				인형의 이름을 취득한다
;K17_인형대사 말중에 인형의 텍스트 컬러로 대사 쳐 한다
;K17_GT							시간대에 대응한 인사
;K17_CALL_G						이 말(앨리스)의 성기의 부르는 법을 돌려준다(GNAME라면 오인 그래서 바꾸고)
;K17_CALL_P						부위의 통칭 젖가슴이라든지
;K17_PS_TEXT					여성기 표현 지문
;
;*********************************************************************************


;*********************************************************************************
;	관계성을 사정하는 함수
;
;	GET_RELATION_TYPE(GRT)
;	매회 플래그 보는 것 대단하기 때문에 취득 플래그에 응해 관계성에 랭크 붙이고 한다
;	매회 IF문으로 나누지 않고 SELECT 할 수 있거나 비교 연산 사용할 수 있다
;	반환값 변수를 조작 해 그 이벤트(커맨드) 안에서 일시적으로 관계성을 올리거나 내리기도 할 수 있다(K17_GRT_EX
;
;	09/06	비트 계산 방식＆헤더를 추가 조건은 마스크 참조
;	09/08	K17_GET_RELATION_TYPE로부터 K17_GRT에 생략
;
;	인수 상대 ID	생략으로 앨리스
;	반환값 관계성의 값↓참조
;
;						함락 키스 합의 우후후 합의 이벤트
;	0	아는 사람 취득 없음
;	1	친구 친밀 5								회화 커맨드로부터 회수
;	2	사모 사모 or섹프 없음↑
;	3	사모키스 있어↓	없음↑
;	4	사모 밀회 데이트이베제
;	5	사모 우후후 있어↓		데이트이베 생략가능
;	6	연모 연모 or 애욕 서로 있어↓	↓		데이트이베 생략가능
;	7	연모 고백											↓고백 이베제 ＆ 데이트이베제
;	8	연모 생해금 위험일 생해금
;	9	버릇												↓버릇 취득 이베제
;	10	연인 연인 연인 or쾌락각인 3
;*********************************************************************************
@K17_GRT(ARG=K17C_ID)
#FUNCTION
#DIM iRTF
#DIM iReRT
VARSET iReRT

iRTF = K17_RT_FG(ARG)
;iRTF = CFLAG:ARG:K17C_CF_RTF

;위로부터 봐 가 마스크를 모두 채우면(자) 돌려준다
FOR i, K17C_RT_MAX-1, i<0,-1
	
	IF (K17C_RTM:i - (K17C_RTM:i & iRTF)) == 0
		iReRT = i
		BREAK
	ENDIF
NEXT

;DEBUGPRINTFORML 【K17_GRT ({iReRT})】

;번호 반환
RETURNF iReRT

;*********************************************************************************
;	RELATION_TYPE의 비트 플래그 세우고 세세한 판정, 실제의 플래그 체크에 사용한다
;	매회 사용하는 것이므로 처리를 생각한다
;
;	인수　：캐릭터 ID
;	반환값：모든 서있는 플래그를 더한 값
;*********************************************************************************
@K17_RT_FG(iID=K17C_ID)
#FUNCTION
#DIM iID	;인수 0
#DIM iReRTF	;반환값

VARSET iReRTF

	;연인	1p9
	SIF CFLAG:iID:기정사실 & 합의_연인 || MARK:iID:쾌락각인 >= 3
		iReRTF += K17C_RTF_연인
	
	;버릇 취득	1p8
	SIF CFLAG:K17C_ID:K17C_CF_버릇취득
		iReRTF += K17C_RTF_버릇
	
	;고백 이베	1p7
	SIF CFLAG:K17C_ID:K17C_CF_고백이벤트
		iReRTF += K17C_RTF_고백
	
	;생해금		1p6
	SIF CFLAG:iID:생해금 >= 2
		iReRTF += K17C_RTF_생해금

	;연모 or애욕 동일 취급	1p5
	SIF TALENT:iID:연모 || TALENT:iID:애욕
		iReRTF += K17C_RTF_연모
	
	;우후후 성공	1p4
	SIF CFLAG:iID:기정사실 & 합의_우후후 || (TCVAR:iID:껴안고첫회 < 6 && !TCVAR:iID:껴안고첫회 == 0)
		iReRTF += K17C_RTF_우후후
	
	;데이트이베 통과	1p3
	SIF CFLAG:K17C_ID:K17C_CF_데이트이벤트
		iReRTF += K17C_RTF_밀회
	
	;키스 성공	1p2
	SIF CFLAG:iID:기정사실 & 합의_키스 || CFLAG:K17C_ID:K17C_CF_FK
		iReRTF += K17C_RTF_키스
	
	;깨끗한교제	1p1
	SIF TALENT:iID:사모 || TALENT:iID:연모 || TALENT:iID:애욕 || TALENT:iID:섹프
		iReRTF += K17C_RTF_사모
	
	;친구		1p0
	SIF CFLAG:K17C_ID:K17C_CF_친구이벤트 || ABL:iID:친밀 >= 5
		iReRTF += K17C_RTF_친구

;DEBUGPRINTFORML 【K17_RT_FG ({iReRTF})



	;어느 것에도 걸리지 않으면 아는 사람 정도
RETURNF iReRTF

;*********************************************************************************
;	현재의 관계성의 명칭 취득
;*********************************************************************************
@K17_GET_RELATION_NAME(ARG)
SELECTCASE ARG
	CASE K17C_아는사람
		LOCALS = 아는 사람
	CASE K17C_친구
		LOCALS = 친구
	CASE K17C_사모
		LOCALS = 좋아……인지도
	CASE K17C_사모키스
		LOCALS = 키스 하는 관계
	CASE K17C_사모밀회
		LOCALS = 를 좋아하는 사람!
	CASE K17C_사모우후후
		LOCALS = 엣찌 하는 관계
	CASE K17C_연모
		LOCALS = 사랑하고 있다……
	CASE K17C_연모고백
		LOCALS = 사랑하고 있다!
	CASE K17C_연모생해금
		LOCALS = 자 만들어 해버리는 관계
	CASE K17C_버릇
		LOCALS = 비밀도 안 관계
	CASE K17C_연인
		LOCALS = 최고의 관계
ENDSELECT
RETURN 1


;*********************************************************************************
;	현재의 관계성에 신분의 변화에 응한 요동을 준다
;	랜덤 있어 실제의 플래그 고려 없음
;
;	기분, 무드, 이성, 분노, 술기운, 상태에 대응한다
;	이벤트무슨 보다 몇 번이나 불리는 커맨드로 사용한다
;
;	마음에 들지 않기 때문에 요점 조정
;	데이트중 무조건으로 하락폭-1
;	연인으로+1로 했다
;	움직임을 주는 조건을 앞의 플래그 가지고 있는 경우만 한정으로 했습니다
;	취득하고 있는 플래그와 관계성의 랭크가 합치하고 있는 경우
;	기분과 반발의 값 밖에 적응되지 않는 안정된 상태가 된다
;	상위의 플래그를 가지면서 랭크가 아래의 경우 , 더불어서 분노, 술기운, 무드, 이성의 비율이 붙는다
;	예) 현재 사모의 랭크이지만 연인의 플래그는 가지고 있는 경우
;		사모로부터+2~-3의 값이 랜덤으로 붙는다
;	다만 플러스치 사정이 많기 때문에 대체로 플러스에 기운다(반발 3이라든지 대해 화내지 않으면)
;	이 예로 무드가 좋다면1/2의 확률로+1인가+2될 것
;	어느 쪽인가라고 하면(자) 내린 감각인가
;	스킨십 등 관계성으로 선택할 수 있는 것이 증가하는 커맨드의 판정에 반 정도 이길 수 있을 것
;	상승폭 상한을 가지고 있는 최고 랭크의 플래그로 할까?
;	당장 이것으로 관망
;
;	인수 0	：캐릭터 ID　생략으로 앨리스
;	반환값	：변경된 RELATION_TYPE치
;*********************************************************************************
@K17_GRT_EX(ARG=K17C_ID)
#FUNCTION
#DIM iRT =0
#DIM iSum=0
#DIM iMinSum=0
#DIM TEMP =0
;상하한설정
#DIM CONST kMINLIMIT = 3
#DIM CONST kMAXLIMIT = 2

VARSET iSum
VARSET iMinSum
VARSET TEMP
iRT = K17_GRT(ARG)

;현재의 랭크 값의 플래그라고 보고 비교해 앞의 플래그를 가지고 있으면 움직임을 준다
IF K17_RT_FG(ARG) <= K17C_RTM:iRT
	;동등의 경우 기분과 반발만 적응해 그대로 돌려준다(부르는 법과 같다)
	iRT += TALENT:ARG:기분
	iRT += MARK:TARGET:반발각인
	RETURNF LIMIT(iRT, 0, K17C_RT_MAX)
ENDIF

;----------------------
;앞의 플래그를 가지고 있는 때의 처리
;----------------------
;기분 그대로 나빴으면―1
IF TALENT:ARG:기분 == 1
	iSum += 1
ELSEIF TALENT:ARG:기분 == -1
	iMinSum += 1
ENDIF

;반발각인
SIF MARK:TARGET:반발각인
	iMinSum += MARK:TARGET:반발각인


;태도의 현재가 세트
;iSum = CFLAG:ARG:태도
;무드＆이성 비율 평균치의1/3 실제로는 합계치를 함께 나누어 사사오입인가
iSum += K17_ROUND((BASE:ARG:무드 / 100) + (1000 - BASE:ARG:이성) / 100,6)

;술기운 비율이1/3더해버린다
SIF BASE:ARG:술기운
	iSum += K17_ROUND(K17_ROUND((BASE:TARGET:술기운*10), (MAXBASE:TARGET:술기운)), 3)
SIF BASE:ARG:분노
	iMinSum +=K17_ROUND( K17_ROUND((BASE:TARGET:분노*10), (MAXBASE:TARGET:분노)) , 3)

	
;데이트중, 하락폭-1
SIF FLAG:데이트상대 == K17C_ID
	iMinSum--
;연인이라면 무조건으로+1
SIF TALENT:K17C_ID:연인
	iSum++
;혐의
SIF CFLAG:ARG:K17C_CF_혐의 && !CFLAG:ARG:시간정지들킴
	iMinSum += K17_ROUND(CFLAG:ARG:K17C_CF_혐의, 30)

;큰 편 일단 보존
SIF iMinSum > iSum
	TEMP = 1
;
;DEBUGPRINTFORML 【K17_GRT_EX 실치({iRT})】
;DEBUGPRINTFORML 【K17_GRT_EX 플러스치({iSum})】
;DEBUGPRINTFORML 【K17_GRT_EX 마이나스치({iMinSum})】

;상하한설치
iMinSum=LIMIT(iMinSum, 0 , kMINLIMIT)
iSum=LIMIT(iSum, 0 , kMAXLIMIT)

iMinSum=LIMIT(iRT-iMinSum, 0 , K17C_RT_MAX-1)
iSum=LIMIT(iRT+iSum, 0 , K17C_RT_MAX-1)

;DEBUGPRINTFORML 【둥근 후】
;DEBUGPRINTFORML 【K17_GRT_EX 실치({iRT})】
;DEBUGPRINTFORML 【K17_GRT_EX 플러스 적응치({iSum})】
;DEBUGPRINTFORML 【K17_GRT_EX 마이나스 적응치({iMinSum})】


;진폭이 넓은 (분)편에게2/4　좁은 (분)편1/4　1/4그리고 그대로
SELECTCASE RAND:4
	CASE 0
		SIF iMinSum == 0
			RETURNF 0
		RETURNF RAND(iMinSum, iRT+1)
	CASE 1
		RETURNF RAND(iRT, iSum+1)
	CASE 2
		IF TEMP
			SIF iMinSum == 0
				RETURNF 0
			RETURNF RAND(iMinSum, iRT+1)
		ELSE
			RETURNF RAND(iRT, iSum+1)
		ENDIF
ENDSELECT

RETURNF iRT

;*********************************************************************************
;	일상 커맨드로 상승할 분노치를 무드 이성으로 평가해
;	분노가 점등 하는 것 같으면 1　반발각인까지 붙을 것 같으면+각인의 수
;	분노가 점등 하지 않을 것 같다면 0
;	
;	완전은 조금 무리 냄새가 난데-라고 생각했지만 어떻게든 되는 것이다
;	본체 SOURCE_CHECK 함수 내부 출입문상 호출로부터 FAVOR_CALC까지를 필요분만큼 재현
;	최종적인 분노는 자연 감소가 걸리지만, 점등은 먼저 붙을 것이므로 점등 플래그는 취할 수 있을 것
;	본체의 코피페 실제로 수치 올리는 것은 좋지 않아로 변수로 대용
;
;	인수 0	：캐릭터 ID　생략으로 앨리스
;	반환값	：추정 분노점등 플래그
;			：RESULT에 현재의 분노치+분노상승치(0~ 1000둥근 후 )
;			：RESULT:1에 이번 분노상승치
;*********************************************************************************
@K17_CHECK_ANGER_COM(ARG=K17C_ID)
#FUNCTION
#DIM DYNAMIC iValue = 0
#DIM DYNAMIC 분노상승치=0
#DIM DYNAMIC 무드상승치=0
#DIM i이성
#DIM i무드
#DIM i욕구불만도
#DIM i욕정
#DIM i기분

SIF TFLAG:102 >= 2 && FLAG:시간정지
	RETURNF 0

;-------------------------------------------------
;상승치 코피페 예측 계산
;-------------------------------------------------
i기분 = TALENT:ARG:기분
i욕정 = PALAM:ARG:욕정
i무드 = BASE:ARG:무드
i이성 = BASE:ARG:이성
i욕구불만도 = CFLAG:ARG:욕구불만도
i욕정 += CUP:ARG:욕정 - CDOWN:ARG:욕정

SIF TCVAR:TARGET:욕구불만도관리 < GETPALAMLV(i욕정, 15)
	i욕구불만도 += (GETPALAMLV(i욕정, 15) - TCVAR:TARGET:욕구불만도관리) * (30 + TCVAR:TARGET:발정 * 20 + TCVAR:TARGET:춘약 * 20)


LOCAL = 0
LOCAL:1 = 0
;각종 쾌감
;50상한, 30000으로+300 이 수치가 크면 SOURCE:ARG의 증가에 대해서 둔하게 된다
LOCAL += (100 - 30000 / (SOURCE:ARG:쾌C + SOURCE:ARG:쾌V + SOURCE:ARG:쾌A + SOURCE:ARG:쾌B + 300)) * (1 + TALENT:ARG:쾌감응답)
;사랑
LOCAL += (100 - 100000 / (SOURCE:ARG:사랑 + 1000))
LOCAL:1 += (100 - 100000 / (SOURCE:ARG:사랑 + 1000))
;욕정
LOCAL += (20 - 20000 / (SOURCE:ARG:욕정 + 1000))
LOCAL:1 += (100 - 100000 / (SOURCE:ARG:욕정 + 1000))
;달성감
LOCAL += (30 - 30000 / (SOURCE:ARG:달성 + 1000))
;복종
LOCAL += (20 - 20000 / (SOURCE:ARG:공순 + 1000))
;굴복
LOCAL += (20 - 20000 / (SOURCE:ARG:굴종 + 1000))
;노출
LOCAL += (30 - 30000 / (SOURCE:ARG:노출 + 1000)) * (ABL:ARG:노출벽 - 3) / 3
;공포
LOCAL += (50 - 20000 / (SOURCE:ARG:공포 + 400)) * (ABL:ARG:순종 - 3) / 3
;고통
LOCAL += (50 - 20000 / (SOURCE:ARG:고통 + 400)) * (ABL:ARG:마조끼 - 3) / 3
;환락
LOCAL += (50 - 10000 / (SOURCE:ARG:환락 + 2000))
;정복
LOCAL += (30 - 90000 / (SOURCE:ARG:정복 + 3000))
;수동
LOCAL += (30 - 90000 / (SOURCE:ARG:수동 + 3000))
;불결
LOCAL -= (50 - 25000 / (SOURCE:ARG:불결 + 500)) * (2 - TALENT:ARG:악취내성) / 2
;울굴
LOCAL -= (50 - 15000 / (SOURCE:ARG:울굴 + 300))
;일탈
LOCAL -= (50 - 25000 / (SOURCE:ARG:일탈 + 500))
;반발
LOCAL -= (50 - 10000 / (SOURCE:ARG:반감 + 200))



;무드에 호감도 상승분 추가
무드상승치 = MIN(ABL:ARG:친밀 + 1,10) * LOCAL / 3
;모브가 있으면(자) 상승량 반감
SIF WITH_MOB()
	무드상승치 /= 2
i무드 += MIN(무드상승치, 200)
i무드 = MIN(i무드 , MAXBASE:ARG:무드)

;이성을 쾌감도분감소
i이성 -= LOCAL:1 * (GETPALAMLV(i욕정, 10) + 1) / 4 * (i욕구불만도 + 1000) / 2000
i이성 = MAX(i이성 , 0 )
;
;DEBUGPRINTFORML 【K17_CHECK_ANGER_COM 반감치({SOURCE:ARG:반감})】
;DEBUGPRINTFORML 【K17_CHECK_ANGER_COM 욕정치({i욕정})】
;DEBUGPRINTFORML 【K17_CHECK_ANGER_COM 욕구불만도({i욕구불만도})】
;DEBUGPRINTFORML 【K17_CHECK_ANGER_COM 무드치({i무드})】
;DEBUGPRINTFORML 【K17_CHECK_ANGER_COM 이성치({i이성})】
;DEBUGPRINTFORML 【K17_CHECK_ANGER_COM 반감({SOURCE:ARG:반감})
;DEBUGPRINTFORML 【K17_CHECK_ANGER_COM 분노{BASE:ARG:분노}


;반발각인 붙을까 본다
SELECTCASE CUP:ARG:반감+CUP:ARG:불쾌
	CASE 500 TO 999
		SIF MARK:ARG:반발각인 < 1
			iValue = 1
	CASE 1000 TO 1999
		SIF MARK:ARG:반발각인 < 2
			iValue = 2
	CASE IS >= 2000
		SIF MARK:ARG:반발각인 < 3
			iValue = 3
ENDSELECT
SIF iValue
	i기분 = -1

;판정치 코피페
;일상 ON 또한 반감 소스유로 분노 가격인상승
SIF SOURCE:ARG:반감 > 0 && TFLAG:102 == 1
	분노상승치 = SOURCE:ARG:반감 * 3 * (2000 - i무드 ) * (500 + i이성) / ((2000 + i무드) * (500 + MAXBASE:ARG:이성))
;바이브 팬티나 촉수 속옷을 입고 있는 때는 분노치가 상승하지 않는 분노 방지
SIF SOURCE:ARG:반감 > 0 && TFLAG:102 == 1 && (EQUIP:ARG:하반신속옷2 == 28 || EQUIP:ARG:하반신속옷2 == 29 || EQUIP:ARG:하반신속옷2 == 30)
	분노상승치 = 0
;정조대를 입고 있는 때는 분노상승치가 증가
SIF SOURCE:ARG:반감 > 0 && TFLAG:102 == 1 && EQUIP:ARG:하반신속옷2 == 27
	분노상승치 = 분노상승치 * 4 / 3
;기분으로 분노상승치가 변화
IF i기분 == 1
	분노상승치 = 분노상승치 * 7 / 10
ELSEIF i기분 == -1
	분노상승치 = 분노상승치 * 3 / 2
ENDIF
SIF TCVAR:ARG:수면제강도 == 1 && CFLAG:ARG:장난
	분노상승치 = 분노상승치 / 2
SIF TCVAR:ARG:수면제강도 == 2 && CFLAG:ARG:장난
	분노상승치 = 분노상승치 / 5
SIF TCVAR:ARG:수면제강도 == 3 && CFLAG:ARG:장난
	분노상승치 = 0

;강행일까
RESULT = LIMIT(BASE:ARG:분노+분노상승치, 0,1000)
RESULT:1 = 분노상승치

;분노가 매우 기뻐해 분노 플래그 ON 할까 보는 이미 반발각인 대하면(자) 화내고 있기 때문에 플러스
SIF BASE:ARG:분노+분노상승치 > MAXBASE:ARG:분노 || iValue
	iValue+=1
;
;DEBUGPRINTFORML 【K17_CHECK_ANGER_COM 상승치({분노상승치})】
;DEBUGPRINTFORML 【K17_CHECK_ANGER_COM 분노 합계치({BASE:ARG:분노+분노상승치})】
;DEBUGPRINTFORML 【K17_CHECK_ANGER_COM 분노점등({iValue})】

RETURNF iValue

;*********************************************************************************
;	반발각인을 올려 후의 소스 체크로 말도 부를 수 있도록(듯이)
;
;	12/14	이력 추가
;
;	인수 0	：반발각인에 가세하는 값　0으로 기분과 분노만 부록 할 수 있을 것
;	인수 1	：캐릭터 ID 생략으로 앨리스
;*********************************************************************************
@K17_MARK_반발각인(iNum=0, iID=K17C_ID)
#DIM iNum
#DIM iID
IF MARK:iID:반발각인 != 3 || iNum
	;서로 고쳐 써 고쳐 쓴 때만 말 부른다
	MARK:iID:반발각인 = LIMIT(MARK:iID:반발각인 +iNum, 0,3)
	MARK:iID:반발취득이력 = LIMIT(MARK:iID:반발각인 +iNum, 0,3)
	TFLAG:반발각인취득 = MARK:iID:반발각인
ENDIF
CFLAG:iID:언짢음 = MARK:iID:반발각인
CFLAG:iID:빡침 = 1
TALENT:iID:기분 = -1
RETURN 1
;*********************************************************************************
;	캐릭터라인 하트를 돌려주는 큰 편　2붙어있는 (분)편은 작은 (분)편
;
;	메모
;SETCOLOR COLOR("PINK") UNICODE(0x2665) RESETCOLOR
;HTML_PRINT "와<font color='red'>&#9829;&#9825;</font>"
;이것 프린트 함수로부터 만들지 않아와 안 돼다
;
;	인수 0	：숫자 넣으면(자) 그 수만큼 하트를 돌려주는 생략 하면(자) 1개
;	반환값	：캐릭터라인으로 되돌아 오므로 %K17_HEART(1)% 라든지 써 사용한다
;*********************************************************************************
@K17_HEART(ARG=1)
#FUNCTIONS
RETURNF UNICODE(0x2764) *ARG
@K17_HEART2(ARG=1)
#FUNCTIONS
RETURNF UNICODE(0x2665) *ARG

;*********************************************************************************
;	캐릭터라인\/\/\/을 돌려주는 기본 3개 1 세트
;
;	. config　FORM중의 3회연속 기호를 전개하지 않는 걸리기 (위해)때문에 준비
;	eramaker의 FORM 구문은,\/\/\/이나+++등이라고 하는 기호가 3 연속으로 표기되었을 경우,
;	NAME:ASSI나 CALLNAME:ASSI등의 캐릭터라인에 전개됩니다.
;	
;
;	K17_RS 사용할 때 주의 인수 2를/이외로 지정해 줄 필요 있어"\\"라든지
;
;	인수 0	：3+지정 몇분 돌려주는 생략으로 3개 1 세트
;	반환값	：캐릭터라인으로 되돌아 오므로%로 둘러싸 사용한다
;*********************************************************************************
@K17_BLUSH(ARG=0)
#FUNCTIONS
#DIMS rTxt
#DIM DYNAMIC iCount
#DIMS CONST tmpTxt = "/"
#DIM CONST iMAX = 3
VARSET rTxt
FOR iCount, 0, ARG+iMAX
	rTxt += tmpTxt
NEXT
RETURNF rTxt

;*********************************************************************************
;	round같은 녀석 이런 것 없었던가
;	우선 소수점 제1위까지로 해 본다
;	RELATION의 프레임 넓히는 것이 정답이라고 생각했다(소보통감
;
;	인수 0	：깨어지는 수
;	인수 1	：깨는 수
;	반환값	：사사오입 한 대답
;*********************************************************************************
@K17_ROUND(ARG:0=0, ARG:1=0)
#FUNCTION
SIF ARG == 0
	RETURNF 0
SIF ARG:1 == 0
	RETURNF 0
	
SIF (((ARG:0)*10) / ARG:1) - ((ARG:0) /ARG:1)*10 >= 5
	RETURNF (ARG:0/ARG:1)+1
RETURNF ARG:0/ARG:1
;*********************************************************************************
; 확률같은 녀석 이런 것 없었던가
;
;	인수 0	：％수치로 대입
;	반환값	：100%중의 랜덤 값과 인수 0의 승패
;*********************************************************************************
@K17_PERCENT(ARG)
#FUNCTION
RETURNF (ARG-RAND:100)>0
;*********************************************************************************
;	하한 설정치의 랜덤
;
;	인수 0이 하한에 이르지 않으면 그대로 돌려준다
;	인수 0이 하한에 이르면(자) 상한내에서 하한~인수 0의 랜덤 값
;	상한을 인수 0의 값을 상하한차까지 취하는 녀석
;
;	인수 0	：판정 수치
;	인수 1	：하한
;	인수 2	：상한 기준치
;	반환값	：판정치
;*********************************************************************************
@K17_LOWER_LIMIT_RAND(iValue, iMin=0, iMax=1)
#FUNCTION
#DIM iValue
#DIM iMin
#DIM iMax
SIF iValue <= iMin
	RETURNF iValue
RETURNF RAND(iMin, LIMIT(iValue, iMin, iMax+(iMax-iMin))+1)
;*********************************************************************************
;	상한 설정치의 랜덤
;
;	인수 0이 상한에 이르지 않으면 그대로 돌려준다
;	인수 0이 상한에 이르고 있으면 하한~상한치로 랜덤
;	상한에 이르고 있으면(자) 하한과 상한폭까지 차이 기준으로 당선율을 동확률이 되게 되는 녀석
;
;	인수 0	：판정 수치
;	인수 1	：하한
;	인수 2	：상한
;	반환값	：판정치
;*********************************************************************************
@K17_MAX_LIMIT_RAND(iValue, iMin=0, iMax=1)
#FUNCTION
#DIM iValue
#DIM iMin
#DIM iMax
SIF iValue <= iMin
	RETURNF iValue
SIF iValue >= iMax
	RETURNF K17_RANGE_RAND(iValue, iMax-iMin, iValue-iMin)
RETURNF RAND(iMin, LIMIT(iValue, iMin, iMax)+1)

;*********************************************************************************
;	그 값에 진폭을 갖게 한 랜덤 값
;
;	인수 0으로부터 상하한에 대한 랜덤 값을 돌려준다
;
;	인수 0	：판정 수치
;	인수 1	：하한 진폭
;	인수 2	：상한 진폭
;	반환값	：판정치
;*********************************************************************************
@K17_RANGE_RAND(iValue, iMin=1, iMax=1)
#FUNCTION
#DIM iValue
#DIM iMin
#DIM iMax
RETURNF RAND(MIN(iValue, iValue-iMin), MAX(iValue, iValue+iMax)+1)

;*********************************************************************************
;	조건부 RAND
;
;	대응 플래그가 가짜의 경우재추첨하기 위해(때문에) 모든 조건이 가짜의 경우 에러
;	도 조금 나은이 생각하자
;
;	인수 0	：돌려주는 값
;	인수 1	：조건 진위
;	반환값	：
;*********************************************************************************
@K17_SELECT_RAND(iValue:0=0, iFlag:0=0, iValue:1=0, iFlag:1=0, iValue:2=0, iFlag:2=0, iValue:3=0, iFlag:3=0, iValue:4=0, iFlag:4=0, iValue:5=0, iFlag:5=0)
#FUNCTION
#DIM CONST kMAX = 6
#DIM iValue, 6
#DIM iFlag, 6
#DIM TEMP

SIF MATCH(iFlag, 0) == VARSIZE("iValue")
	THROW 인수 부정　K17_SELECT_RAND

WHILE 1
	TEMP = RAND:(kMAX)
	SIF iFlag:TEMP
		RETURNF iValue:TEMP
WEND

;*********************************************************************************
;	eratohoЯeverse보다 빌렸던 원래는 여신 전생인가?　제작자님들 감사합니다
;	라이세스후리였으므로 코피페
;	말내에서 사용하므로 K17 붙어 있습니다
;*********************************************************************************

;*********************************************************************************
;	/그리고 단락지은 캐릭터라인을 랜덤에 선택
;	말문장내에서 조금 어조, 단어, 말꼬리만 바꾸고 싶다든가 그러한 때에 사용한다
;	더욱/넣어 공백이 돌려주어지는 것을 이용이라든지도 할 수 있다
;	많을 때는 PRINTDATA　STRDATA 사용하면 좋지
;	사용 빈도에 의해 K17_RS에 개명
;*********************************************************************************
;_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/#
;
;	Module		:RAND_SPLIT.ERB
;	Facility	:인수로서 건네받은 ARGS로부터, 특정의 캐릭터라인 ARGS:1으로 단락지어
;				 그 중에서 하나를 랜덤으로 돌려준다(확률은 항상 등 확률)
;
;	Licence		:라이센스 프리.
;
;	Modification Data:
;	Edit	Date			Author					Reason
;	001		2011/10/17		P						신규 작성
;	002		2013/02/05		. 					SPLIT의 수정을 이용한 RESULT 보호
;_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/#
;
;@RAND_SPLIT
;ARGS   조작 하는 캐릭터라인
;ARGS:1 ARGS를 단락짓는 캐릭터라인
;ARG    돌려주는 수, 2개 이후는 RESULTS:1이후에 돌려주어 간다
;================================================
@K17_RS, ARGS, ARGS:1 = "/", ARG = 1
#FUNCTIONS
#LOCALSSIZE 1000
#LOCALSIZE 1
#DIM TEMP
#DIM NUM

VARSET LOCALS

SPLIT ARGS, ARGS:1 , LOCALS, NUM

FOR LOCAL, 0, ARG
	IF NUM > 0
		TEMP = RAND:NUM
		NUM--
		RESULTS:LOCAL = %LOCALS:TEMP%
		ARRAYREMOVE LOCALS, TEMP, 1
	ENDIF
NEXT
RETURNF RESULTS

;_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/#
;
;	Module		:CHANGE_SPLIT.ERB
;	Facility	:인수로서 건네받은 ARGS로부터, 특정의 캐릭터라인 ARGS:1으로 단락지었을 경우의 ARG 번째의 캐릭터라인을 ARGS:2로 변환한 캐릭터라인을 돌려주는 함수 @CHANGE_SPLIT
;
;	Licence		:라이센스 프리.
;
;	Modification Data:
;
;	Edit	Date			Author					Reason
;	001		2011/09/25		N도리신규작성
;	002		2013/02/05		. 					SPLIT의 수정을 이용한 RESULT 보호
;	003		2016/10/04		망상 에로 아가씨 앨리스하늘 삽입되는 것이 마음이 생겼으므로 하늘의 경우 날려에 요소 번호 관리는 할 수 없게 되는군
;_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/#
;
;@CHANGE_SPLIT
;ARGS   조작 하는 캐릭터라인
;ARGS:1 ARGS를 단락짓는 캐릭터라인
;ARG 　 ARGS를 단락지은 다음에, 조작 하는 개소
;ARGS:2 변경한다
;================================================
@K17_CHANGE_SPLIT(ARGS , ARGS:1 , ARG , ARGS:2 = "")
#FUNCTIONS
#LOCALSSIZE 200
#LOCALSIZE 3
VARSET LOCALS , ""
SIF ARG == -1
	RETURNF ""

SPLIT ARGS , ARGS:1 , LOCALS, LOCAL:2
LOCALS:ARG = %ARGS:2%
FOR LOCAL , 0 , 200
	SIF LOCALS:LOCAL != ""
		LOCAL:1 = LOCAL
NEXT
SIF LOCAL:1 == 0
	RETURNF LOCALS
FOR LOCAL , 1 , 200
	SIF LOCALS:LOCAL != ""
		LOCALS += ARGS:1 + LOCALS:LOCAL
	SIF LOCAL == LOCAL:1
		BREAK
NEXT
RETURNF LOCALS

;_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/#
;
;	Module		:AUTO_SPLIT_NUM.ERB
;	Facility	:인수로서 건네받은 ARGS로부터, 특정의 캐릭터라인 ARGS:1으로 단락지었을 경우의, ARGS:2로 일치하는 번호를 돌려주는 함수 @AUTO_SPLIT_NUM
;
;	Licence		:라이센스 프리.
;
;	Modification Data:
;
;	Edit	Date			Author					Reason
;	001		2011/09/25		N도리신규작성
;	002		2013/02/05		. 					SPLIT의 수정을 이용한 RESULT 보호
;	003		2016/10/04		망상 에로 아가씨 앨리스 검색 프레임 넓히고 SPLIT의 인수 4를 삭제 검색도 FINDELEMENT 맡김에 배열 사이즈를 넓혔다
;_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/#
;
;@AUTO_SPLIT_NUM
;ARGS   조작 하는 캐릭터라인
;ARGS:1 ARGS를 단락짓는 캐릭터라인
;ARG 　 ARGS를 단락지은 다음에, 조작 하는 개소. ARGS:2가 지정되고 있는 경우, 발견한 ARGS:2의 장소+ARG 번째의 캐릭터라인을 돌려준다.
;ARGS:2 검색하는 캐릭터라인
;================================================
@K17_AUTO_SPLIT_NUM(ARGS , ARGS:1 , ARGS:2 = "" , ARG = 0)
#FUNCTION
#DIM TEMP
#LOCALSSIZE 500
#LOCALSIZE 1
VARSET LOCALS
SPLIT ARGS , ARGS:1 , LOCALS

LOCAL = FINDELEMENT(LOCALS , ESCAPE(ARGS:2))
IF LOCAL != -1
	SIF ARG + LOCAL < 0
		THROW @"에러：함수@AUTO_SPLIT_NUM에서{LOCAL}번째의 캐릭터라인에%ARGS:2%를 발견했습니다만, 제3 인수{ARG}의 지정이 부정합니다. "
	RETURNF (LOCAL + ARG)
ENDIF
RETURNF -1


;*********************************************************************************
;	TW에 들어가있는 함수의 커스터마이즈
;	말내에서 사용하는 것을 상정해 폰트색관계를 정비
;*********************************************************************************
;-------------------------------------------------
;함수명 :CHOICE
;개요:2~4택함수
;인수 :ARGS:0…질문 내용
;      :ARGS:1~4…선택지의 캐릭터라인(3,4는 생략가능)
;반환값:유저 입력 결과(0~3)
;선택 조건이 없는, 심플한 선택지 작성 함수
;말등으로도 사용할 수 있을지도 모른다
;우선 4택까지. 늘려도 괜찮은데
;
;	커스터마이즈
;말주로부터 질문용으로색 바꾸고
;조금 신경이 쓰였으므로 색 1회 리셋 해 되돌리는 사양에
;-------------------------------------------------
@K17_CHOICE(ARGS:0, ARGS:1, ARGS:2, ARGS:3, ARGS:4)
VARSET LOCAL
PRINTL
PRINTFORML %ARGS:0%
PRINTL
RESETCOLOR
FOR LOCAL, 0, 4
	PRINTFORMDL [{LOCAL}] - %ARGS:(1 + LOCAL)%
	SIF LOCAL && !STRLENS(ARGS:(2 + LOCAL))
		BREAK
NEXT
$INPUT_LOOP
INPUT
SELECTCASE RESULT
	CASE 0 TO LOCAL - 1
	CASEELSE
		CALL SIMATTYAUOJISAN
		CLEARLINE 1
		GOTO INPUT_LOOP
ENDSELECT
LOCAL:1=RESULT
IF FLAG:구상텍스트설정 > 0
	IF FLAG:구상색
		TRYCALLFORM M_KOJO_COLOR_K{NO:TARGET}
	ELSE
		RESETCOLOR
	ENDIF
ELSE
	RESETCOLOR
ENDIF

RETURN LOCAL:1
RETURN RESULT
;-------------------------------------------------
;선택지를 표시해 입력 결과를 돌려주는 함수 조건을 채우지 않는 선택지를 회색 표시로 해 무효로 하는 것이 가능
;인수에 대사와 조건(0으로 무효, 비0으로 유효)을 지정. 최대 5개까지
;반환값은 선택한 선택지의 번호
;
;	커스터마이즈
;RESULT의 보호를 추가
;11개에까지 확장
;-------------------------------------------------
@K17_ASK_M(ARGS:0, ARG:0, ARGS:1, ARG:1, ARGS:2, ARG:2, ARGS:3, ARG:3, ARGS:4, ARG:4, ARGS:5, ARG:5, ARGS:6, ARG:6, ARGS:7, ARG:7, ARGS:8, ARG:8, ARGS:9, ARG:9, ARGS:10, ARG:10)
CURRENTREDRAW
LOCAL:0 = RESULT
LOCAL:1 = 0

REDRAW 0
RESETCOLOR
FOR LOCAL:0, 0, 11
	IF ARGS:(LOCAL:0) != ""
		IF ARG:(LOCAL:0)
			PRINTBUTTON @"{LOCAL:0, 2, RIGHT}[%ARGS:(LOCAL:0)%]", LOCAL:0
		ELSE
			SETCOLOR 0x606060
			PRINTPLAINFORM {LOCAL:0, 2, RIGHT}[%ARGS:(LOCAL:0)%]
			RESETCOLOR
		ENDIF
		PRINTL 
	ENDIF
NEXT
$INPUT_LOOP
INPUT
IF RESULT < 0 || RESULT > 10 || ARGS:RESULT == "" || !ARG:RESULT
	CLEARLINE 1
	GOTO INPUT_LOOP
ENDIF
REDRAW LOCAL:0
LOCAL:1=RESULT
IF FLAG:구상텍스트설정 > 0
	IF FLAG:구상색
		TRYCALLFORM M_KOJO_COLOR_K{NO:TARGET}
	ELSE
		RESETCOLOR
	ENDIF
ELSE
	RESETCOLOR
ENDIF

RETURN LOCAL:1

;*********************************************************************************
;	스프릿트를 이용한 캐릭터라인의 랜덤 셔플 함수
;	%K17_SPLIT_SHUFFLE("제일/두 번/3번")%→두 번 3번 제일같이 랜덤으로 셔플 된다
;
;	인수 0	：넣고 바꾸고를 실시하는 전체 캐릭터라인 인수 1의 문자로 단락지은 것
;	인수 1	：단락 문자 생략으로/
;	반환값	：바꿔 넣고 변경을 가한 캐릭터라인
;*********************************************************************************
@K17_SPLIT_SHUFFLE(ARGS="", ARGS:1="/")
#FUNCTIONS
#DIM DYNAMIC iNum = 0
#LOCALSSIZE 500
VARSET LOCALS

;해체해 LOCALS에 격납
SPLIT ARGS, ARGS:1, LOCALS
;해체한 수를 확보
iNum = RESULT
;랜덤으로 바꾸어 넣고
FOR i, 0, (iNum-1)
	r = RAND(i, iNum)
	SWAP LOCALS:i, LOCALS:r
NEXT

;교체가 끝나면(자) 차례로 LOCALS에 격납해 되돌린다

FOR i, 1, iNum
	LOCALS:0 += LOCALS:i
NEXT

RETURNF LOCALS
;*********************************************************************************
;	그 캐릭터가 있는 위치의 MASTER 이외의인원수를 조사한다
;
;	도 와 스마트한 방식 없는가
;	어느 CMATCH
;
;	인수 0	：캐릭터 ID　생략으로 MASTER
;	반환값	：인원수 지정 캐릭터를 포함한다
;*********************************************************************************
@K17_GET_CHARA_POSNUM(ARG=0)
#FUNCTION
RETURNF CMATCH(CFLAG:현재위치, CFLAG:ARG:현재위치, 1, CHARANUM)

;VARSET LOCAL
;FOR i, 1, CHARANUM
;	SIF CFLAG:ARG:현재위치 == CFLAG:i:현재위치
;		LOCAL ++
;NEXT
;RETURNF LOCAL
;*********************************************************************************
;	랜덤 이벤트 발생 체크
;
;	딸딸이들킴 발생의 판정을 코피페 해 필요한 덧붙인 녀석
;	이제(벌써) 차라리 에로계 이벤트 발생 판정으로서 취급한다
;	지정 위치에서 혼자서 짬 해 괴로워하고 있다고(면) 확률로 발생
;	어쩐지 능숙한 이름 생각나지 않아 나중에 바꿀 예정
;
;	인수 0	：캐릭터 ID　생략으로 앨리스
;	인수 1	：지정 위치 생략으로 상대의 현재위치
;	인수 2	：그 밖에 TARGET가 있는지 고려할까　0으로 하지 않는다　1으로 혼자서 한정 생략으로 1
;	인수 3	：개운 큰 무늬를 사용할지 어떨지 생략이(가) 아님
;	반환값	：발생 1 개운 큰 무늬로 발생 2 실패 0
;*********************************************************************************
@K17_CHECK_RANDOM_EVENT(ARG=K17C_ID, ARG:1=-1, ARG:2=1, ARG:3=0)
#FUNCTION
#DIM DYNAMIC iPos=0

;은밀 장난 시간정지 상대가 분노는 되돌린다
SIF CFLAG:MASTER:은밀중 && CFLAG:MASTER:장난 && FLAG:시간정지 && CFLAG:ARG:빡침
	RETURNF 0

;위치 초기화
iPos = ARG:1
SIF ARG:1 == -1
	iPos = CFLAG:ARG:현재위치

;지정 위치인가
SIF CFLAG:ARG:현재위치 != iPos
	RETURNF 0

;그 위치에 상대가 혼자서인가
IF ARG:2 == 1
	;GET_TARGETNUM는 현재위치 밖에 취할 수  없었다인 실제 이동하고 있지 않으면 안될 것 같은
	;SIF GET_TARGETNUM() > 1
	SIF K17_GET_CHARA_POSNUM(ARG) > 1
		RETURNF 0
ENDIF


;약해지지 않은가 자지 않은가
SIF BASE:ARG:체력 < 1000 || CFLAG:ARG:수면 || TCVAR:ARG:휴식중 || CFLAG:ARG:쇠약
	RETURNF 0
;모이지 않으면 되돌린다
SIF CFLAG:ARG:욕구불만도 <= 300
	RETURNF 0
	
;DEBUGPRINTFORML 【K17_CHECK_RANDOM_EVENT({CFLAG:ARG:욕구불만도 + TFLAG:행운보정 })】
;통상의 딸딸이들킴 조건 코피페
SIF RAND:(CFLAG:ARG:욕구불만도 + TFLAG:행운보정 * 10) >= RAND:500
	RETURNF 1
	
SIF ITEM:토부「개운대문」&& ARG:3==1
	RETURNF 2
RETURNF 0
;*********************************************************************************
;	랜덤 이벤트 발생 체크
;	럭키 색골
;
;	K17_CHECK_RANDOM_EVENT를 간소화
;	단순하게 확률 의존 행운보정이10% 관계성치3%가 효과가 있다
;
;	인수 0	：％확률 생략으로 50
;	인수 1	：그 밖에 TARGET가 있는지 고려할까　0으로 하지 않는 진생략으로 혼자서 한정
;	인수 2	：캐릭터 ID　생략으로 앨리스
;	반환값	：발생 1 실패 0
;*********************************************************************************
@K17_LUCKY_SUKEBE(ARG=50, ARG:1=1, ARG:2=K17C_ID)
#FUNCTION
#DIM DYNAMIC iPos=0

;은밀 장난 시간정지 상대가 분노는 되돌린다
SIF CFLAG:MASTER:은밀중 && CFLAG:MASTER:장난 && FLAG:시간정지 && CFLAG:(ARG:2):빡침
	RETURNF 0

;그 위치에 상대가 혼자서인가
IF ARG:1
	;GET_TARGETNUM는 현재위치 밖에 취할 수  없었다인 실제 이동하고 있지 않으면 안될 것 같은
	;SIF GET_TARGETNUM() > 1
	SIF K17_GET_CHARA_POSNUM(ARG:2) > 1
		RETURNF 0
ENDIF

;약해지지 않은가 자지 않은가
SIF BASE:(ARG:2):체력 < 1000 || CFLAG:(ARG:2):수면 || TCVAR:(ARG:2):휴식중 || CFLAG:(ARG:2):쇠약
	RETURNF 0

;통상의 딸딸이들킴 조건 코피페
SIF K17_PERCENT(ARG +TFLAG:행운보정*10 + K17_GRT_EX(ARG:2)*3)
	RETURNF 1
RETURNF 0

;*********************************************************************************
;	수송중의 팬티 검색
;
;	지정한 캐릭터 ID의 팬티를 현재 소지하고 있는지 검색한다
;	전종 검색, 가지고 있는 매수를 돌려준다
;
;	인수 0	：캐릭터 ID
;	반환값	：소지하고 있는 매수
;*********************************************************************************
@K17_CHECK_수송팬티(iID=K17C_ID)
#FUNCTION
#DIM iID
#DIM iPants_Type
#DIM iPants_Num

SIF !FLAG:팬티수송
	RETURNF 0

iPants_Num = 0
FOR iPants_Type, 0, MAXPANTS
	SIF PANTS_TEMP:iID:iPants_Type
		iPants_Num += PANTS_TEMP:iID:iPants_Type
NEXT
RETURNF iPants_Num

;*********************************************************************************
;	복장의 이름을 얻는다
;
;	복장의 외형의 이름을 얻는다
;	SHOW~라고는인 만큼 대해 탈이 한 후 등 너무 고도여 잘 모르기 때문에
;	이것은 완전하게 외형으로부터 맨 위의 것을 이름으로 돌려주는 녀석
;	그리고 드러내면인가 판단하는 용
;	보는 것은 옷만이므로 이것으로 공문자라면 속옷을 검색하면 된다
;	혹은 ARG:1을 세우면 옷없음 속옷환 보이고에서도 잡힐 것
;	옷 있어 속옷없이도 외형으로부터는 모를 것이므로 윗도리를 얻을 수 있다
;	조만간 SHOW와 같이 명칭 정리한다
;
;	EQUIP를 인하 검색
;
;	인수 0	：캐릭터 ID　생략으로 앨리스
;	인수 1	：윗도리가 없었던 때에 속옷까지 볼까의 플래그 생략 0으로 보지 않는 진으로 본다
;	반환값	：복장의 이름 없으면 공문자열이 될 것 판정으로 사용하거나 명칭 얻거나 한다
;	반환값 1	：RESULT에 옷이라면 2　속옷이라면 1　알몸 0
;*********************************************************************************
@K17_GET_CLOTHNAME_TOP(ARG=K17C_ID, ARG:1=0)
#FUNCTIONS	
FOR i, GETNUM(EQUIP,"기모노"), GETNUM(EQUIP,"상반신윗도리1")-1,-1
	IF EQUIP:TARGET:i
		RESULT = 2
		RETURNF CLOTHNAME(i, EQUIP:ARG:i)
	ENDIF
NEXT
IF ARG:1
	RESULT = 1
	RETURNF K17_GET_CLOTHNAME_TOP_UNDER(ARG)
ENDIF
RESULT = 0
RETURNF
;*********************************************************************************
;	상반신속옷
;*********************************************************************************
@K17_GET_CLOTHNAME_TOP_UNDER(ARG=K17C_ID)
#FUNCTIONS	
FOR i, GETNUM(EQUIP,"보디슈트"), GETNUM(EQUIP,"상반신속옷1")-1,-1
	IF EQUIP:TARGET:i
		RETURNF CLOTHNAME(i, EQUIP:ARG:i)
	ENDIF
NEXT
RETURNF

;*********************************************************************************
;	하반신
;*********************************************************************************
@K17_GET_CLOTHNAME_BOTTOM(ARG=K17C_ID, ARG:1=0)
#FUNCTIONS
FOR i, GETNUM(EQUIP,"기모노"), GETNUM(EQUIP,"바지")-1,-1
	;날리는 녀석
	SELECTCASE i
		CASE GETNUM(EQUIP,"상반신윗도리1"), GETNUM(EQUIP,"상반신윗도리2")
			CONTINUE
	ENDSELECT
	
	IF EQUIP:TARGET:i
		RESULT = 2
		SIF K17_GET_SKIRT(ARG) != ""
			RETURNF CLOTHNAME(i, EQUIP:ARG:i)+"의"+K17_GET_SKIRT(ARG)
		RETURNF CLOTHNAME(i, EQUIP:ARG:i)
	ENDIF
NEXT
IF ARG:1
	RESULT = 1
	RETURNF K17_GET_CLOTHNAME_TOP_UNDER(ARG)
ENDIF
RESULT = 0
RETURNF
;*********************************************************************************
;	하반신속옷
;*********************************************************************************
@K17_GET_CLOTHNAME_BOTTOM_UNDER(ARG=K17C_ID)
#FUNCTIONS
FOR i, GETNUM(EQUIP,"보디슈트"), GETNUM(EQUIP,"하반신속옷1")-1,-1
	;날리는 녀석
	SELECTCASE i
		CASE GETNUM(EQUIP,"상반신속옷1"), GETNUM(EQUIP,"상반신속옷2")
			CONTINUE
	ENDSELECT
	IF EQUIP:TARGET:i
		SIF i == GETNUM(EQUIP,"하반신속옷2")
			RETURNF "속옷"
		RETURNF CLOTHNAME(i, EQUIP:ARG:i)
	ENDIF
NEXT
RETURNF

;*********************************************************************************
;	넘기는 물체의 명칭
;
;	인수	：캐릭터 ID
;*********************************************************************************
@K17_GET_SKIRT(ARG=K17C_ID)
#FUNCTIONS
SIF EQUIP:ARG:기모노
	RETURNF "옷자락"
IF EQUIP:ARG:치마
	SIF EQUIP:ARG:치마!= 3
		RETURNF "치마"
	RETURNF
ENDIF
;원피의 셀렉트
SELECTCASE EQUIP:ARG:원피스
	CASE 1,2,3,7,8,9,10
		RETURNF "치마"
	CASE 4,5,6,11,13
		RETURNF "옷자락"
	CASEELSE
		RETURNF
ENDSELECT
RETURNF

;*********************************************************************************
;	앨리스의 두 명칭을 돌려준다
;
;	CALLNAME라고 입을까 CNAME에
;	정지 하고 싶다……
;
;	인수 0	：부르는 법을 알고 싶은 캐릭터 ID　생략으로 MASTER
;	인수 1	：MASTER의 장식을 붙일까(관계에 의해 랜덤) 어떤가 생략이(가) 아님
;	반환값	：이름과 경칭 첨부 캐릭터라인으로 되돌아 오므로%로 둘러싸 사용한다
;*********************************************************************************
@K17_CNAME(iID=K17C_마스터ID, iDecFlag=0)
#FUNCTIONS
#DIM	iID			;인수 0
#DIM	iDecFlag	;인수 1
#DIM	iRT			;평가 관계성 EX가 아니다
#DIMS	cCallName	;당신, 이라든지의 통칭
#DIMS	cReName		;돌려주는 이름이라고 하는 의미의
#DIMS	cHon		;경칭

VARSET cReName
VARSET cCallName
VARSET cHon
;역극 마스터의 경우 캐릭터 불러로 변경
SIF FLAG:역극 && iID == MASTER
	iID = FLAG:역극

;아마 MASTER가 제일 많기 때문에 앞처리
IF iID == MASTER
	;관계성 기본치
	iRT = K17_GRT(K17C_ID)
	;연인 붙고 있으면(자) 연인 취급으로
	SIF TALENT:MASTER:연인 == K17C_ID
		iRT = K17C_연인
	;분노 상태라면 내린다
	SIF CFLAG:K17C_ID:빡침 == 1
		iRT -= 1
	;반발 기분 붙고 있으면(자) 그 만큼 상하
	SIF MARK:K17C_ID:반발각인
		iRT -= 1
	SIF TALENT:K17C_ID:기분
		iRT += TALENT:K17C_ID:기분

	;연령 성별 판정 헛됨 처리 많은데……
	IF TALENT:MASTER:연령 != -1
		IF TALENT:MASTER:성별 & 1
			cCallName = 당신
		ELSE
			cCallName = 당신
		ENDIF
	ELSEIF TALENT:MASTER:연령 == -1
		IF TALENT:MASTER:성별 & 1
			cCallName = 아가씨
		ELSE
			cCallName = 군
		ENDIF
	ENDIF
	
	;경칭 이름 당신이라면 약어
	IF CALLNAME:MASTER != "당신"
		IF TALENT:MASTER:연령 < 1
			 IF TALENT:MASTER:성별 & 1
			 	;위화감 있었으므로 부 없음으로
				cHon = 
			ELSE
				cHon = 군
			ENDIF
		ELSE
			cHon = 씨
		ENDIF
	ENDIF
	
	;관계 성별 선택
	SELECTCASE iRT
		
		CASE IS >= K17C_연모
			;연모↑로 이름 당신 불러 반반
			cReName = %K17_RS(@"%CALLNAME:MASTER%/당신")%
			;하트와\/\/\/뒤따라
			SIF iDecFlag
				cReName += K17_RS(K17_HEART()+"\\"+K17_HEART2()+"\\"+K17_BLUSH(),"\\")
			RETURNF cReName
		
		CASE IS >= K17C_사모키스
			;이름 불러
			cReName = %CALLNAME:MASTER%
			SIF iDecFlag
				cReName += K17_RS(K17_BLUSH()+"\\"+K17_HEART2(),"\\")
			RETURNF cReName
			
		
		CASE IS >= K17C_친구
			;이름+경칭 첨부와 아는 사람의 부르는 법 반반
			cReName = %K17_RS(@"%CALLNAME:MASTER%%cHon%/%cCallName%")%
			
			SIF iDecFlag
				cReName += K17_BLUSH()
			RETURNF cReName
		
		CASE IS >= K17C_아는사람
			;당신 or 당신
			RETURNF cCallName
			
		CASEELSE
			;마이나스가 되었을 때
			RETURNF "당신"
	ENDSELECT
	
RETURNF cReName
ELSE

;--------------------------
;	타캐릭터의 부르는 법
;--------------------------
	SELECTCASE iID
		CASE K17C_ID
			;자신 자신!　돕페르개가
			RETURNF "앨리스"
			
		CASE K17C_신키ID, K17C_미마ID, K17C_에이키ID
			;모양 뒤따라라
			RETURNF CALLNAME:iID+"님"
			
		CASE K17C_유메코ID, K17C_루이즈ID, K17C_사토리ID
			;씨 뒤따라라
			RETURNF CALLNAME:iID+"씨"
			
		CASEELSE
			;이름 경칭 생략
			RETURNF CALLNAME:iID
	ENDSELECT
ENDIF
RETURNF "\n\n　K17_CNAME　상정외 에러니깐 보고해줘\n 기다리고 있어, 당신 \n\n"

;*********************************************************************************
;	앨리스의 친구인가 어떤가 판정한다
;	두고 이름……
;
;	인수 0	：친구인가 알고 싶은 캐릭터 ID　-1그리고 랜덤에 돌려주는 마스터 이외
;	반환값	：친구 ID(반응시키고 싶은 캐릭터라면) 그 ID　그 이외 0
;*********************************************************************************
@K17_GET_FRIENDS(ARG=0)
#FUNCTION
#DIM DYNAMIC iTmp=0
;그대로 돌려준다
IF ARG >= 0
	iTmp = FINDELEMENT (K17C_친구ID, ARG, 0, K17C_친구인원수)
	SIF iTmp>=0
		RETURNF K17C_친구ID:iTmp
	RETURNF 0

;아는 사람 안에서 랜덤
ELSEIF ARG == -1

	IF !FLAG:역극
		RETURNF K17C_친구ID:(RAND:K17C_친구인원수)
	ELSE
		;역극과 동캐릭터의 경우도 있으므로 그 대응
		WHILE 1
			iTmp = RAND:K17C_친구인원수
			SIF FLAG:역극 != K17C_친구ID:iTmp
				RETURNF K17C_친구ID:iTmp
		WEND
	ENDIF
	
ENDIF

RETURNF 0

;*********************************************************************************
;	지정한 캐릭터의 위치의 앨리스의 친구 ID를 취득
;	엄밀하게 말하면(자) TARGET는 아니다
;	기본적으로 MASTER의 위치에서 잡아 TARGET가 될 수 있을까를 본다
;	최초로 발견된 것을 돌려주므로 배열로 우선 도를 바꾸어 둔다
;	TARGET로 취하면(자) 우선도가 효과가 없고 몇 번이나 돌리는 것보다 괜찮을까
;
;	인수 0	：조사하고 싶은 캐릭터의 ID　그 캐릭터가 있는 위치에서 검색하는 생략으로 MASTER
;	반환값	：발견된 아는 사람의 ID　발견되지 않았으면 0
;*********************************************************************************
@K17_GET_FRIENDS_TARGET(ARG=0)
#FUNCTION

FOR i, 0, K17C_친구인원수
	IF CFLAG:(K17C_친구ID:i):현재위치 ==  CFLAG:ARG:현재위치
		RETURNF K17C_친구ID:i
	ENDIF
NEXT
RETURNF 0

;*********************************************************************************
;	지정한 캐릭터의 위치가 앨리스의 친구의 초기위치인지를 조사한다
;
;	인수 0	：조사하고 싶은 캐릭터의 ID　그 캐릭터가 있는 위치에서 검색하는 생략으로 MASTER
;	반환값	：발견된 아는 사람의 ID　발견되지 않았으면 0
;*********************************************************************************
@K17_GET_FRIENDS_ROOM(ARG=0)
#FUNCTION
FOR i, 0, K17C_친구인원수
	IF CFLAG:(K17C_친구ID:i):초기위치 ==  CFLAG:ARG:현재위치
		RETURNF K17C_친구ID:i
	ENDIF
NEXT
RETURNF 0
;*********************************************************************************
;	앨리스 이외의TARGET를 찾는다
;	복수 있어도 친구 우선으로 돌려준다
;	보통으로 찾는 경우 최초로 나온 ID
;
;	반환값	：발견된 앨리스 이외의ID　친구＞타인＞이루어 없었으면 0
;*********************************************************************************
@K17_GET_TARGETS_ID()
#FUNCTION
#DIM TEMP = 0

;우선 친구로부터
TEMP = K17_GET_FRIENDS_TARGET()
IF TEMP
	RETURNF TEMP
ELSE
	;보통으로 봐 앨리스 이외의ID 찾는다
	FOR i, 1, CHARANUM
		IF TARGET:i != K17C_ID
			RETURNF TARGET:i
		ENDIF
	NEXT
ENDIF
RETURNF 0
;*********************************************************************************
;	현재 사용할 수 있는 인형 플래그를 판정 돌려준다
;
;	인수 0	：알고 싶은 인형의 ID　생략 0이라면 전부의 합계 -1로 사용할 수 있는 것으로부터 랜덤
;			：1(0bit)으로 샹하이　2(1bit)로 봉래 양쪽 모두라면 3　다음에 증설해도 되게
;	반환값 0	：플래그치로 돌려주는 안 돼라면 0 표시 체크에도 사용할 수 있다
;	반환값 1	：사용할 수 있는 수
;*********************************************************************************
@K17_GET_DOLL(ARG=0)
#FUNCTION
#DIM DYNAMIC rFlag =0, 0	;RETURNF 플래그

;원래 표시 할 수 없으면 돌아간다
SIF CFLAG:K17C_ID:K17C_CF_인형대사표시설정<0
	RETURNF 0

;필요한 분만큼 검색하는 만들기에
FOR i, 1, K17C_인형수
	
	;검색 회피
	SIF ARG != K17C_인형 :i && ARG > 0
		CONTINUE
	;검색 히트 카운트업
	IF ARG == K17C_인형 :i || ARG <= 0
		FINDCHARA CALLNAME, K17C_인형명 :i
		IF RESULT == -1
			rFlag:0 += K17C_인형 :i
			rFlag:1++
		ENDIF
	ENDIF
NEXT
RESULT:1 = rFlag:1
SIF ARG >= 0 || rFlag:0 == 0
	RETURNF rFlag
	
;줄우선으로 돌려주는 패턴
IF ARG == -2
	FOR i, 1, K17C_인형수
		IF K17C_인형 :i & rFlag:0
			rFlag:0 = K17C_인형 :i
			BREAK
		ENDIF
	NEXT
ENDIF
;랜덤 선택
WHILE ARG==-1
	i=RAND:K17C_인형수
	IF K17C_인형 :i & rFlag:0
		rFlag:0 = K17C_인형 :i
		BREAK
	ENDIF
WEND
RETURNF rFlag

;*********************************************************************************
;	현재 사용할 수 있는 인형의 이름을 돌려준다
;	인형의 수 늘리면(자) 확장 설계 이 진부 쓰기는 위험하다
;
;	인수 0	：모드 선택 생략 0 지문　1이라면 대사로 사용하는 사용할 수 있는 안으로부터 랜덤으로 가져온다
;
;	반환값	：양쪽 모두 사용할 수 있으면 샹하이들
;			：다른 한쪽이라면 그 이름
;			：양쪽 모두 안 돼라면 인형들
;*********************************************************************************
@K17_GET_DOLL_CNAME(ARG=0)
#FUNCTIONS
#DIM DYNAMIC iDollFlag=0
#DIMS DYNAMIC cDoll

;인형 표현 처리 샹하이 우선으로
IF !ARG
	iDollFlag=K17_GET_DOLL(0)
	IF iDollFlag & K17C_샹하이 &&iDollFlag & K17C_호라이
		cDoll = 샹하이들
	ELSEIF iDollFlag & K17C_샹하이
		cDoll = %K17C_인형명:1%
	ELSEIF iDollFlag & K17C_호라이
		cDoll = %K17C_인형명:2%
	ELSE
		cDoll = %K17C_인형명:0%
	ENDIF
ELSE
	iDollFlag=K17_GET_DOLL(-1)
	RETURNF K17C_인형명 :FINDELEMENT(K17C_인형, iDollFlag)
ENDIF
RETURNF cDoll

;*********************************************************************************
;	말중에 인형의 텍스트 컬러로 대사 쳐 한다
;
;		일문만 사용하고 싶을 때에 사용하는 샹하이 or 봉래가 추가 or 말하게 한 없고 스킵
;		앨리스의 대사를 개행하지 않고 부르면 좋은 느낌옆에 오른쪽맞춤
;		개행되고 있으면(자) 왼쪽 가지런히 하고
;09/24	개행하지 않고 불러 판정 실패했을 때도 개행해 돌려주면 안심이다
;09/25	어느 쪽을 사용할 수 있는지, 판정이 귀찮아서 랜덤 선택시는 인형으로서 취급해, 사용할 수 있는 (분)편으로 대사를 낸다
;		양서존의 경우만 랜덤 로
;		귀찮아 캐릭터가 있을까의 판정은 또 따로 만들었으므로 랜덤은 그쪽으로 취해
;09/26	결국/은 마음대로 붙는 사양에
;
;	ARG:0	：인형의 플래그　1 생략으로 샹하이　2로 봉래　-1그리고 랜덤
;	ARG:1	：표시하고 싶은 PRINT의 형식　0 없음　1L 2W　생략으로 L
;	ARGS	：표시하고 싶은 캐릭터라인 기본적으로 오른쪽맞춤하늘에서 자신의 이름 부른다
;	반환값	：성공하면(자) 표시한 인형의 플래그 시세를 회복해지면(자) 0
;*********************************************************************************
@K17_인형대사(ARG=1, ARG:1=1, ARGS)
#DIM DYNAMIC DollFlag=0


;사양 체크
DollFlag = K17_GET_DOLL(ARG)
;연속으로 인형에게 말하게 하고 있을 때는 개행하지 않는다
SIF !DollFlag && ARG:1 == 0
	RETURN 0

;묘사 판정
IF CFLAG:K17C_ID:K17C_CF_인형대사표시설정<0 || !DollFlag
	;공행 판정
	SIF !LINEISEMPTY()
		PRINTL
	RETURN 0
ENDIF
;텍스트 컬러 초기화
IF FLAG:구상텍스트설정 > 0
	IF FLAG:구상색
		SETCOLOR DollFlag==K17C_샹하이 ?  K17C_샹하이COLOR#K17C_호라이COLOR
	ELSE
		RESETCOLOR
	ENDIF
ELSE
	RESETCOLOR
ENDIF

;입력 문자 판정
IF ARGS == ""
	SELECTCASE DollFlag
		CASE K17C_샹하이
			ARGS += "샹하이"
		CASE K17C_호라이
			ARGS += "호라이"
	ENDSELECT
ENDIF

;문자 출력
IF LINEISEMPTY()
	PRINTFORMLC ＼%ARGS%/
ELSE
	PRINTFORMC ＼%ARGS%/
;	PRINTFORM 
;	PRINTFORM /
ENDIF
SELECTCASE ARG:1
	CASE 1
		PRINTL
	CASE 2
		PRINTW
ENDSELECT
;종료 처리
IF FLAG:구상텍스트설정 > 0
	IF FLAG:구상색
		TRYCALLFORM M_KOJO_COLOR_K{NO:TARGET}
	ELSE
		RESETCOLOR
	ENDIF
ELSE
	RESETCOLOR
ENDIF
RETURN DollFlag

;*********************************************************************************
;	시간대에 대한 인사
;
;	인수 0	：부르고 싶은 시간대 생략으로 현재 시간
;	반환값	：캐릭터라인
;*********************************************************************************
@K17_GT(ARG=0)
#FUNCTIONS
VARSET LOCALS
SIF ARG==0
 ARG=TIME:2

IF ARG == 1 || ARG == 2
	LOCALS += "안녕"
ELSEIF ARG == 3 || ARG == 4
	LOCALS += "안녕"
ELSEIF ARG >= 5 && ARG <= 7
	LOCALS += "안녕"
ENDIF
RETURNF LOCALS
;*********************************************************************************
;	앨리스의 성기의 부르는 법을 돌려준다
;	지금의 곳 랜덤
;	조만간 부르는 법의 고정 플래그에서도 만들고 싶다
;
;	09/23	발기도, 윤활도 추가
;
;	인수 0	：캐릭터 ID 생략으로 MASTER
;	인수 1	：0또는 생략으로 인수 1의 캐릭터의 성별에 맞춘 성기를 부른다
;			：양성의 경우 우선해 양성의 장대 쪽을 부른다
;			：실수에서도 지시할 수 있는 예：성별은 후타나리이지만 지금은 여성기를 부르고 싶을 때, 1
;	인수 2	：장식할까 생략으로 하지 않는 음어 강제등으로 사용할 수 있지
;			：
;	반환값	：캐릭터라인으로 되돌아 오므로%로 둘러싸 사용한다
;*********************************************************************************
@K17_CALL_G(ARG=0, ARG:1=0, ARG:2=0)
#FUNCTIONS
VARSET LOCALS
LOCAL=0
;성기 지정을 본다
IF ARG==MASTER && (ARG:1) >= 2 && TALENT:ARG:성별 == 1 && ITEM:PBAND
	;여성 MASTER의 페니스밴드용
	RETURNF "페니스밴드"
ELSEIF ARG:1 != 0
	LOCAL=ARG:1
	;지정했지만 그 캐릭터에게는 그 성기 도착하지 않다는 경우, 본래의 것으로 바꾼다
	SIF (LOCAL >= 2 && !(TALENT:ARG:성별 & 2) )||( LOCAL == 1 && !(TALENT:ARG:성별 & 1))
		LOCAL=TALENT:ARG:성별
ELSEIF ARG:1 == 0
	LOCAL=TALENT:ARG:성별
ENDIF


;장대가 있을까 보는 MASTER의 경우만
IF LOCAL>=2 && ARG:2 && ARG==0

	SIF BASE:ARG:발기 >= 1000
		LOCALS += K17_RS("발기한/큰/딱딱해진")
	
	;형상 장식
	SELECTCASE TALENT:ARG:형상
		;사랑스럽다
		CASE 1
			LOCALS += K17_RS("사랑스러운/귀여운/아이/어린/미성숙")
		;결점 조리
		CASE 2
			LOCALS += K17_RS("단소/허술한/작은/조루/부끄러운/포경")
		;빛난다!
		CASE 4
			LOCALS += K17_RS("발광/반짝반짝/부끄러운")
		;돌기 부착
		CASE 5
			LOCALS += K17_RS("오돌오돌/울퉁불퉁/삐걱삐걱")
		;크다!
		CASE 6
			LOCALS += K17_RS("두꺼운/굵은/엄청 굵은/흉악/큰")
		;보통은 칭찬하고 녹고
		CASEELSE
			LOCALS += K17_RS("훌륭한/음란한/껍질 벗겨진/수컷")
	ENDSELECT
;여성기
ELSEIF LOCAL==1 && ARG:2
	IF PALAM:ARG:윤활 >= PALAMLV:5
		LOCALS += K17_RS("질척질척한/대홍수 난")
	ELSEIF PALAM:ARG:윤활 >= PALAMLV:3
		LOCALS += K17_RS("질척질척한/흠뻑 젖은/미끈미끈한")
	ENDIF
	LOCALS += K17_RS("음란한/여성스러운/갖고 싶어하는 듯한")
	
;자신의 후타나리
ELSEIF LOCAL>=2 && ARG:2
	SIF BASE:ARG:발기 >= 1000
		LOCALS += K17_RS("발기한/큰/딱딱해진")
	LOCALS += K17_RS("아이/민감/사랑스러운/부끄러운")
ENDIF

;남성기
SIF LOCAL >= 2 && TALENT:ARG:성별 == 2
	RETURNF LOCALS+K17_RS("자지/자지")
;후타나리
SIF LOCAL >= 2 && TALENT:ARG:성별 == 3
	RETURNF LOCALS+K17_RS("클리/후타나리") +K17_RS("자지/자지")
SIF LOCAL == 1
	RETURNF LOCALS+K17_RS("보지/거기")
	
RETURNF "\n\n　미안, K17_CALL_G　상정외 에러니깐 보고해줘 \n　앞에거 먼저 끝내세요"


;*********************************************************************************
;	앨리스의 감각 부위의 통칭을 꺼낸다
;
;	허덕여 관계로 사용하는 용기본 자신용인가……무슨 혼란한데-조만간 통합할까
;	여기는 어느 부위인가가 우선
;
;	인수 0	：PALAM 부위 번호(ABL에서도 PALAM에서도 같은가
;	인수 1	：장식할까 생략으로 하지 않는 음어 강제등으로 사용할 수 있지
;	인수 2	：캐릭터 ID　생략으로 앨리스 자신
;			：
;	반환값	：캐릭터라인으로 되돌아 오므로%로 둘러싸 사용한다
;*********************************************************************************
@K17_CALL_P(ARG, ARG:1=0, ARG:2=K17C_ID)
#FUNCTIONS
VARSET LOCALS

SELECTCASE ARG:0
	;구리
	CASE K17C_부위C
		;장대 판정
		IF TALENT:(ARG:2):성별 >= 2
			LOCALS += K17_CALL_G((ARG:2), 3, ARG:1)
		ELSE
			SIF ARG:1 && BASE:ARG:발기 >= 1000
				LOCALS += K17_RS("발기한/서버린/볼록해진/커진")
			LOCALS += K17_RS("클리/클리토리스")
		ENDIF
	;바기나(질)
	CASE K17C_부위V
		LOCALS += K17_CALL_G((ARG:2), 1, ARG:1)
	;애널
	CASE K17C_부위A
		LOCALS += K17_RS("애널/엉덩이/뒤")
	;가슴
	CASE K17C_부위B
		IF ARG:1 && ARG:2!=K17C_ID && TALENT:ARG:성별!=2
			
			;상대가 여자의 경우젖비교
			IF TALENT:MASTER:가슴사이즈 > TALENT:ARG:가슴사이즈
				LOCALS += K17_RS("출렁출렁/포동포동/몰캉몰캉")+"한"
			ELSEIF TALENT:MASTER:가슴사이즈 < TALENT:ARG:가슴사이즈
				LOCALS += K17_RS("말랑말랑한/작은/귀여운")
			ELSE
				;자신과 같은 크기로 엣찌라든지 무슨 일이야
				LOCALS += K17_RS("말랑말랑한/음란한/말캉말캉한")
			ENDIF
			
			
		ENDIF
		LOCALS += K17_RS("젖가슴/가슴")
	;마우스
	CASE K17C_부위M_키스
		LOCALS += K17_RS("츄우/키스/츄―")
	
	;↓추가
	CASE K17C_부위B_유두
		IF ARG:1
			IF EX:(ARG:2):B절정 * 10000 + PALAM:(ARG:2):쾌B + PALAM:(ARG:2):욕정 >= 30000
				LOCALS += K17_RS("서버려/단단해져/딱딱해져")+"서"
			ELSEIF EX:(ARG:2):B절정 * 10000 + PALAM:(ARG:2):쾌B + PALAM:(ARG:2):욕정 >= 10000
				LOCALS += K17_RS("발기한/딱딱해진/서버린")
			ELSEIF EX:(ARG:2):B절정 * 10000 + PALAM:(ARG:2):쾌B + PALAM:(ARG:2):욕정 >= 3000
				LOCALS += K17_RS("딱딱해진/볼록해진/충혈된")
			ENDIF
		ENDIF
		LOCALS += K17_RS("젖꼭지/유두")
	CASE K17C_부위M_펠라
		LOCALS += K17_RS("입/입")

ENDSELECT
RETURNF LOCALS


;*********************************************************************************
;	여성기 표현 지문
;
;	인수 0	：캐릭터 ID　생략으로 앨리스
;	인수 1	：장식 플래그진으로 붙이는 생략가짜이(가) 아님
;	반환값	：캐릭터라인으로 되돌아 오므로%로 둘러싸 사용한다
;*********************************************************************************
@K17_PS_TEXT(iID=K17C_ID, iDecFlag=0)
#FUNCTIONS
#DIM iID		;인수 0
#DIM iDecFlag	;인수 1
#DIMS cReTxt	;반환값
VARSET cReTxt

;장식
IF iDecFlag
	SIF TALENT:K17C_ID:처녀 == 1
		cReTxt = 남을 모른다
	
	IF PALAM:K17C_ID:윤활 > PALAMLV:4
		cReTxt += K17_RS("질퍽질퍽하게 젖은/허벅지까지 애액을 흘리는")
	ELSEIF PALAM:K17C_ID:윤활 > PALAMLV:2
		cReTxt += K17_RS("미끌미끌하게 애액에 젖은/미끌미끌하게 젖은")
	ENDIF
ENDIF

IF TALENT:iID:체형 < 0
	cReTxt += K17_RS("어린 균열/어린 음순")
ELSE
	cReTxt += K17_RS("은밀한 틈/은밀한 곳")
ENDIF
RETURNF cReTxt
